{"version":3,"sources":["./src/app/comments/comment.service.ts","./src/app/feedback/feedback.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACO;;;AAQ3C,MAAM,cAAc;IAGzB,YAAoB,OAAoB;QAApB,YAAO,GAAP,OAAO,CAAa;IAAI,CAAC;IAE7C,WAAW,CAAC,GAAG;QACb,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC;QACjE,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,cAAc,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;IAClE,CAAC;IAED,aAAa,CAAC,OAAgB;QAC5B,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,cAAc,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;IAClE,CAAC;IAED,sBAAsB,CAAC,SAAiB,EAAE,WAAmB;QAC3D,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC,GAAG,CAAC,aAAa,EAAE,WAAW,CAAC;QACzF,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,cAAc,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;IAClE,CAAC;IAED,iBAAiB,CAAC,EAAU;QAC1B,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB,EAAE,EAAE,CAAC;IAClD,CAAC;;4EArBU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;6FAEP,cAAc;cAH1B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAA2C;AACO;;;AAM3C,MAAM,eAAe;IAE1B,YAAoB,OAAoB;QAApB,YAAO,GAAP,OAAO,CAAa;IAAI,CAAC;IAE7C,WAAW,CAAC,GAAG;QACb,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC;QACjE,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,cAAc,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;IAClE,CAAC;IAED,cAAc,CAAC,QAAkB;QAC/B,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,cAAc,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;IACnE,CAAC;IAED,kBAAkB,CAAC,EAAU;QAC3B,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB,EAAE,EAAE,CAAC;IAClD,CAAC;;8EAfU,eAAe;kGAAf,eAAe,WAAf,eAAe;6FAAf,eAAe;cAD3B,wDAAU","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Comment } from './comment';\r\nimport { BaseService } from '../base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommentService {\r\n\r\n  tokenVal: string;\r\n  constructor(private service: BaseService) { }\r\n\r\n  getComments(obj): Observable<Comment[]> {\r\n    let params = new HttpParams().set('page', obj.get('page') || '1')\r\n    return this.service.get({ url: 'api/comments', params: params })\r\n  }\r\n\r\n  createComment(comment: Comment): Observable<Comment> {\r\n    return this.service.post({ url: 'api/comments', form: comment })\r\n  }\r\n\r\n  getCommentsByArticleId(articleId: string, articleType: string): Observable<Comment[]> {\r\n    let params = new HttpParams().set('parent_id', articleId).set('parent_type', articleType)\r\n    return this.service.get({ url: 'api/comments', params: params })\r\n  }\r\n\r\n  deleteCommentById(id: string): Observable<Comment> {\r\n    return this.service.delete(`api/comments/${id}`)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Feedback } from './feedback';\r\nimport { BaseService } from '../base.service';\r\n\r\n@Injectable()\r\nexport class FeedbackService {\r\n  tokenVal: string;\r\n  constructor(private service: BaseService) { }\r\n\r\n  getFeedBack(obj): Observable<Feedback[]> {\r\n    let params = new HttpParams().set('page', obj.get('page') || '1')\r\n    return this.service.get({ url: 'api/feedback', params: params })\r\n  }\r\n\r\n  createFeedback(feedback: Feedback): Observable<Feedback> {\r\n    return this.service.post({ url: 'api/feedback', form: feedback })\r\n  }\r\n\r\n  deleteFeedbackById(id: string): Observable<Feedback> {\r\n    return this.service.delete(`api/feedback/${id}`)\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}