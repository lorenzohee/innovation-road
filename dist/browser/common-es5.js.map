{"version":3,"sources":["webpack:///src/app/comments/comment.service.ts","webpack:///src/app/feedback/feedback.service.ts"],"names":["CommentService","service","obj","params","set","get","url","comment","post","form","articleId","articleType","id","delete","providedIn","FeedbackService","feedback"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaA,c;;;AAGX,8BAAoBC,OAApB,EAA0C;AAAA;;AAAtB,aAAAA,OAAA,GAAAA,OAAA;AAAyB;;;;oCAEjCC,G,EAAG;AACb,cAAIC,MAAM,GAAG,IAAI,+DAAJ,GAAiBC,GAAjB,CAAqB,MAArB,EAA6BF,GAAG,CAACG,GAAJ,CAAQ,MAAR,KAAmB,GAAhD,CAAb;AACA,iBAAO,KAAKJ,OAAL,CAAaI,GAAb,CAAiB;AAAEC,eAAG,EAAE,cAAP;AAAuBH,kBAAM,EAAEA;AAA/B,WAAjB,CAAP;AACD;;;sCAEaI,O,EAAgB;AAC5B,iBAAO,KAAKN,OAAL,CAAaO,IAAb,CAAkB;AAAEF,eAAG,EAAE,cAAP;AAAuBG,gBAAI,EAAEF;AAA7B,WAAlB,CAAP;AACD;;;+CAEsBG,S,EAAmBC,W,EAAmB;AAC3D,cAAIR,MAAM,GAAG,IAAI,+DAAJ,GAAiBC,GAAjB,CAAqB,WAArB,EAAkCM,SAAlC,EAA6CN,GAA7C,CAAiD,aAAjD,EAAgEO,WAAhE,CAAb;AACA,iBAAO,KAAKV,OAAL,CAAaI,GAAb,CAAiB;AAAEC,eAAG,EAAE,cAAP;AAAuBH,kBAAM,EAAEA;AAA/B,WAAjB,CAAP;AACD;;;0CAEiBS,E,EAAU;AAC1B,iBAAO,KAAKX,OAAL,CAAaY,MAAb,wBAAoCD,EAApC,EAAP;AACD;;;;;;;uBArBUZ,c,EAAc,iH;AAAA,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBAFb;;;;;sEAEDA,c,EAAc;cAH1B,wDAG0B;eAHf;AACVc,oBAAU,EAAE;AADF,S;AAGe,Q;;;;;;;;;;;;;;;;;;;;;;ACT3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,e;;;AAEX,+BAAoBd,OAApB,EAA0C;AAAA;;AAAtB,aAAAA,OAAA,GAAAA,OAAA;AAAyB;;;;oCAEjCC,G,EAAG;AACb,cAAIC,MAAM,GAAG,IAAI,+DAAJ,GAAiBC,GAAjB,CAAqB,MAArB,EAA6BF,GAAG,CAACG,GAAJ,CAAQ,MAAR,KAAmB,GAAhD,CAAb;AACA,iBAAO,KAAKJ,OAAL,CAAaI,GAAb,CAAiB;AAAEC,eAAG,EAAE,cAAP;AAAuBH,kBAAM,EAAEA;AAA/B,WAAjB,CAAP;AACD;;;uCAEca,Q,EAAkB;AAC/B,iBAAO,KAAKf,OAAL,CAAaO,IAAb,CAAkB;AAAEF,eAAG,EAAE,cAAP;AAAuBG,gBAAI,EAAEO;AAA7B,WAAlB,CAAP;AACD;;;2CAEkBJ,E,EAAU;AAC3B,iBAAO,KAAKX,OAAL,CAAaY,MAAb,wBAAoCD,EAApC,EAAP;AACD;;;;;;;uBAfUG,e,EAAe,iH;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe;;;;;sEAAfA,e,EAAe;cAD3B;AAC2B,Q","file":"common-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Comment } from './comment';\r\nimport { BaseService } from '../base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommentService {\r\n\r\n  tokenVal: string;\r\n  constructor(private service: BaseService) { }\r\n\r\n  getComments(obj): Observable<Comment[]> {\r\n    let params = new HttpParams().set('page', obj.get('page') || '1')\r\n    return this.service.get({ url: 'api/comments', params: params })\r\n  }\r\n\r\n  createComment(comment: Comment): Observable<Comment> {\r\n    return this.service.post({ url: 'api/comments', form: comment })\r\n  }\r\n\r\n  getCommentsByArticleId(articleId: string, articleType: string): Observable<Comment[]> {\r\n    let params = new HttpParams().set('parent_id', articleId).set('parent_type', articleType)\r\n    return this.service.get({ url: 'api/comments', params: params })\r\n  }\r\n\r\n  deleteCommentById(id: string): Observable<Comment> {\r\n    return this.service.delete(`api/comments/${id}`)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Feedback } from './feedback';\r\nimport { BaseService } from '../base.service';\r\n\r\n@Injectable()\r\nexport class FeedbackService {\r\n  tokenVal: string;\r\n  constructor(private service: BaseService) { }\r\n\r\n  getFeedBack(obj): Observable<Feedback[]> {\r\n    let params = new HttpParams().set('page', obj.get('page') || '1')\r\n    return this.service.get({ url: 'api/feedback', params: params })\r\n  }\r\n\r\n  createFeedback(feedback: Feedback): Observable<Feedback> {\r\n    return this.service.post({ url: 'api/feedback', form: feedback })\r\n  }\r\n\r\n  deleteFeedbackById(id: string): Observable<Feedback> {\r\n    return this.service.delete(`api/feedback/${id}`)\r\n  }\r\n}\r\n"]}