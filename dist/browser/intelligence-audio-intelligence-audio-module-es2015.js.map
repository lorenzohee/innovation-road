{"version":3,"sources":["./src/app/intelligence-audio/intelligence-audio-routing.module.ts","./src/app/intelligence-audio/intelligence-audio.component.ts","./src/app/intelligence-audio/intelligence-audio.component.html","./src/app/intelligence-audio/intelligence-audio.module.ts","./src/app/intelligence-audio/intelligence.service.ts"],"names":[],"mappings":"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","file":"intelligence-audio-intelligence-audio-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IntelligenceAudioComponent } from './intelligence-audio.component';\r\n\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: IntelligenceAudioComponent\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class IntelligenceAudioRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { IntelligenceService } from './intelligence.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-intelligence-audio',\r\n  templateUrl: './intelligence-audio.component.html',\r\n  styleUrls: ['./intelligence-audio.component.scss']\r\n})\r\nexport class IntelligenceAudioComponent implements OnInit {\r\n\r\n  textForm = this.fb.group({\r\n    body: ['', [Validators.required, Validators.maxLength(500)]],\r\n    spd: [5, [Validators.required, Validators.max(15), Validators.min(0)]],\r\n    pit: [5, [Validators.required, Validators.max(15), Validators.min(0)]],\r\n    vol: [5, [Validators.required, Validators.max(15), Validators.min(0)]],\r\n    per: [0, [Validators.required, Validators.max(3), Validators.min(0)]],\r\n  })\r\n  downloadLink: String = ''\r\n  constructor(private fb: FormBuilder, private intelligenceService: IntelligenceService, private router: Router, public snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  onSubmit() {\r\n    this.intelligenceService.postText(this.textForm.value).subscribe(res => {\r\n      this.downloadLink = `${res}`;\r\n      this.snackBar.open('转换成功，点击下载按钮下载', '关闭', {\r\n        duration: 20000,\r\n      });\r\n    })\r\n  }\r\n\r\n  downloadAudioFile() {\r\n    window.open(`/${this.downloadLink}`);\r\n  }\r\n}\r\n","<div class=\"container py-4\">\r\n  <form [formGroup]='textForm' (ngSubmit)=\"onSubmit()\">\r\n    <label for=\"form_content\">要合成的内容(限定500字)</label>\r\n    <div class=\"md-form\" id=\"md\">\r\n      <textarea id=\"form_content\" class=\"md-textarea md-textarea-auto form-control\" formControlName='body'></textarea>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-6\">\r\n        <div class=\"md-form\">\r\n          <input type=\"text\" id=\"form_spd\" class=\"md-textarea form-control\" mdbInput formControlName='spd'>\r\n          <label for=\"form_spd\">输入语速（0-15）</label>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-6\">\r\n        <div class=\"md-form\">\r\n          <input type=\"text\" id=\"form_pit\" class=\"md-textarea form-control\" mdbInput formControlName='pit'>\r\n          <label for=\"form_pit\">输入音调（0-15）</label>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-6\">\r\n        <div class=\"md-form\">\r\n          <input type=\"text\" id=\"form_vol\" class=\"md-textarea form-control\" mdbInput formControlName='vol'>\r\n          <label for=\"form_vol\">输入音量（0-15）</label>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-6\">\r\n        <div class=\"md-form\">\r\n          <mat-select placeholder=\"请选择发声类型\" formControlName='per'>\r\n            <mat-option value=\"0\">普通女声</mat-option>\r\n            <mat-option value=\"1\">普通男声</mat-option>\r\n            <mat-option value=\"2\">情感合成-度逍遥</mat-option>\r\n            <mat-option value=\"3\">情感合成-度丫丫</mat-option>\r\n          </mat-select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button mdbBtn color=\"info\" class=\"my-4\" type=\"submit\" [disabled]='!textForm.valid'>Submit</button>\r\n    <button mdbBtn color=\"info\" class=\"my-4 mx-4\" type=\"button\" [disabled]='!downloadLink'\r\n      (click)=\"downloadAudioFile()\">Download</button>\r\n  </form>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IntelligenceAudioRoutingModule } from './intelligence-audio-routing.module';\r\nimport { IntelligenceAudioComponent } from './intelligence-audio.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [IntelligenceAudioComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    IntelligenceAudioRoutingModule\r\n  ]\r\n})\r\nexport class IntelligenceAudioModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IntelligenceService {\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n\r\n  postText(form): Observable<String> {\r\n    return this.httpClient.post<String>(`/api/intelligence/text-to-speach`, form, httpOptions);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}