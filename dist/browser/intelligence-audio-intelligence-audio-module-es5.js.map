{"version":3,"sources":["webpack:///src/app/intelligence-audio/intelligence-audio-routing.module.ts","webpack:///src/app/intelligence-audio/intelligence-audio.component.ts","webpack:///src/app/intelligence-audio/intelligence-audio.component.html","webpack:///src/app/intelligence-audio/intelligence-audio.module.ts","webpack:///src/app/intelligence-audio/intelligence.service.ts"],"names":["routes","path","component","IntelligenceAudioRoutingModule","forChild","imports","exports","IntelligenceAudioComponent","fb","intelligenceService","router","snackBar","textForm","group","body","required","maxLength","spd","max","min","pit","vol","per","downloadLink","postText","value","subscribe","res","open","duration","window","onSubmit","downloadAudioFile","selector","templateUrl","styleUrls","IntelligenceAudioModule","declarations","httpOptions","headers","IntelligenceService","httpClient","form","post","providedIn"],"mappings":"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","file":"intelligence-audio-intelligence-audio-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IntelligenceAudioComponent } from './intelligence-audio.component';\r\n\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: IntelligenceAudioComponent\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class IntelligenceAudioRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormBuilder } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { IntelligenceService } from './intelligence.service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-intelligence-audio',\r\n  templateUrl: './intelligence-audio.component.html',\r\n  styleUrls: ['./intelligence-audio.component.scss']\r\n})\r\nexport class IntelligenceAudioComponent implements OnInit {\r\n\r\n  textForm = this.fb.group({\r\n    body: ['', [Validators.required, Validators.maxLength(500)]],\r\n    spd: [5, [Validators.required, Validators.max(15), Validators.min(0)]],\r\n    pit: [5, [Validators.required, Validators.max(15), Validators.min(0)]],\r\n    vol: [5, [Validators.required, Validators.max(15), Validators.min(0)]],\r\n    per: [0, [Validators.required, Validators.max(3), Validators.min(0)]],\r\n  })\r\n  downloadLink: String = ''\r\n  constructor(private fb: FormBuilder, private intelligenceService: IntelligenceService, private router: Router, public snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  onSubmit() {\r\n    this.intelligenceService.postText(this.textForm.value).subscribe(res => {\r\n      this.downloadLink = `${res}`;\r\n      this.snackBar.open('转换成功，点击下载按钮下载', '关闭', {\r\n        duration: 20000,\r\n      });\r\n    })\r\n  }\r\n\r\n  downloadAudioFile() {\r\n    window.open(`/${this.downloadLink}`);\r\n  }\r\n}\r\n","<div class=\"container py-4\">\r\n  <form [formGroup]='textForm' (ngSubmit)=\"onSubmit()\">\r\n    <label for=\"form_content\">要合成的内容(限定500字)</label>\r\n    <div class=\"md-form\" id=\"md\">\r\n      <textarea id=\"form_content\" class=\"md-textarea md-textarea-auto form-control\" formControlName='body'></textarea>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-6\">\r\n        <div class=\"md-form\">\r\n          <input type=\"text\" id=\"form_spd\" class=\"md-textarea form-control\" mdbInput formControlName='spd'>\r\n          <label for=\"form_spd\">输入语速（0-15）</label>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-6\">\r\n        <div class=\"md-form\">\r\n          <input type=\"text\" id=\"form_pit\" class=\"md-textarea form-control\" mdbInput formControlName='pit'>\r\n          <label for=\"form_pit\">输入音调（0-15）</label>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-6\">\r\n        <div class=\"md-form\">\r\n          <input type=\"text\" id=\"form_vol\" class=\"md-textarea form-control\" mdbInput formControlName='vol'>\r\n          <label for=\"form_vol\">输入音量（0-15）</label>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-6\">\r\n        <div class=\"md-form\">\r\n          <mat-select placeholder=\"请选择发声类型\" formControlName='per'>\r\n            <mat-option value=\"0\">普通女声</mat-option>\r\n            <mat-option value=\"1\">普通男声</mat-option>\r\n            <mat-option value=\"2\">情感合成-度逍遥</mat-option>\r\n            <mat-option value=\"3\">情感合成-度丫丫</mat-option>\r\n          </mat-select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button mdbBtn color=\"info\" class=\"my-4\" type=\"submit\" [disabled]='!textForm.valid'>Submit</button>\r\n    <button mdbBtn color=\"info\" class=\"my-4 mx-4\" type=\"button\" [disabled]='!downloadLink'\r\n      (click)=\"downloadAudioFile()\">Download</button>\r\n  </form>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IntelligenceAudioRoutingModule } from './intelligence-audio-routing.module';\r\nimport { IntelligenceAudioComponent } from './intelligence-audio.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [IntelligenceAudioComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    IntelligenceAudioRoutingModule\r\n  ]\r\n})\r\nexport class IntelligenceAudioModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IntelligenceService {\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n\r\n  postText(form): Observable<String> {\r\n    return this.httpClient.post<String>(`/api/intelligence/text-to-speach`, form, httpOptions);\r\n  }\r\n}\r\n"]}