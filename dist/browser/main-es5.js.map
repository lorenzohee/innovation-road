{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin/admin-routing.module.ts","webpack:///src/app/admin/admin-user-guard.ts","webpack:///src/app/admin/admin.component.ts","webpack:///src/app/admin/admin.component.html","webpack:///src/app/admin/admin.module.ts","webpack:///src/app/app-routing/app-routing.module.ts","webpack:///src/app/app.browser.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth-guard.service.ts","webpack:///src/app/auth/auth-routing.module.ts","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/auth/login/login.component.ts","webpack:///src/app/auth/login/login.component.html","webpack:///src/app/auth/register/register.component.ts","webpack:///src/app/auth/register/register.component.html","webpack:///src/app/auth/token.storage.ts","webpack:///src/app/base.service.ts","webpack:///src/app/blog/blog.service.ts","webpack:///src/app/cfg/cfg.service.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/interceptors/header.interceptor.ts","webpack:///src/app/interceptors/http-error.interceptor.ts","webpack:///src/app/page-not-found/page-not-found.component.ts","webpack:///src/app/page-not-found/page-not-found.component.html","webpack:///src/app/pipe/html-format.pipe.ts","webpack:///src/app/shared/pagination/pagination.component.ts","webpack:///src/app/shared/pagination/pagination.component.html","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","canActivate","children","component","AdminRoutingModule","forChild","imports","OnlyAdminUsersGuard","storage","user","JSON","parse","getStorage","is_admin","AdminComponent","selector","templateUrl","AdminModule","declarations","providers","redirectTo","pathMatch","loadChildren","mod","AuthModule","canLoad","BlogModule","CfgModule","IntelligenceAudioModule","AboutModule","CommentsModule","FeedbackModule","AppRoutingModule","forRoot","initialNavigation","AppBrowserModule","withServerTransition","appId","register","enabled","production","bootstrap","AppComponent","authService","router","me","subscribe","data","userSubscription","$userSource","signOut","navigate","link","unsubscribe","styleUrls","AppModule","platformId","platform","provide","useClass","multi","entryComponents","Object","AuthGuard","window","AuthRoutingModule","AuthService","http","token","email","password","create","observer","post","next","setUser","saveToken","complete","fullname","repeatPassword","isAdmin","roles","indexOf","asObservable","tokenVal","getToken","get","LoginComponent","that","login","saveStorage","stringify","RegisterComponent","userForm","required","passwordsMatchValidator","control","root","value","passwordMatch","valid","getRawValue","TOKEN_KEY","TokenStorage","validLocalStorage","removeItem","clear","setItem","getItem","key","val","localStorage","str","BaseService","httpClient","injector","snackBar","zone","serviceAdd","params","headers","append","requestHeaders","withCredentials","assign","obj","options","getRequestOptions","url","pipe","error","handleError","form","delete","put","fileToUpload","formData","FormData","name","run","open","message","verticalPosition","horizontalPosition","duration","onAction","dismiss","ErrorEvent","console","log","status","providedIn","BlogService","baseService","set","page","blogType","tags","pageNum","blogNum","postImageFile","tag","CfgService","service","HeaderComponent","cfgService","coverFlag","coverClass","events","event","getCfgList","res","blogTypes","valu","HomeComponent","blogService","titleService","metaService","getRecommandBlog","setTitle","updateTag","content","getBlogList","recommandBlog","slice","AuthHeaderInterceptor","clonedRequest","clone","handle","CatchErrorInterceptor","request","do","err","text","statusText","globalEvents","emit","PageNotFoundComponent","HtmlFormatPipe","sanitizer","style","type","replace","bypassSecurityTrustHtml","PaginationComponent","route","pageList","size","icur","changes","_num","Math","ceil","total","getPageList","index","url_array","split","url_root","length","url_params","forEach","element","tmp","i","push","map","reverse","_total","SharedModule","adClient","adSlot","layout","adFormat","environment","application","angular","fontawesome","document","addEventListener","bootstrapModule","catch"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AdminComponent } from './admin.component';\r\nimport { OnlyAdminUsersGuard } from './admin-user-guard';\r\n\r\nconst routes: Routes = [{\r\n  path: 'admin',\r\n  canActivate: [OnlyAdminUsersGuard],\r\n  children: [{\r\n    path: '',\r\n    component: AdminComponent,\r\n  }]\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AdminRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from \"@angular/router\";\r\nimport { TokenStorage } from '../auth/token.storage';\r\n\r\n@Injectable()\r\nexport class OnlyAdminUsersGuard implements CanActivate {\r\n\r\n  storage: TokenStorage;\r\n  constructor() {\r\n    this.storage = new TokenStorage();\r\n  }\r\n\r\n  canActivate() {\r\n    const user = JSON.parse(this.storage.getStorage('user'))\r\n    return user && user.is_admin;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  constructor() {}\r\n\r\n  public ngOnInit() {\r\n  }\r\n}\r\n\r\n\r\n","<h4>HELLO FROM ADMIN PAGE</h4>","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport {AdminComponent} from './admin.component';\r\nimport {OnlyAdminUsersGuard} from './admin-user-guard';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AdminComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AdminRoutingModule,\r\n  ],\r\n  providers: [\r\n    OnlyAdminUsersGuard\r\n  ]})\r\nexport class AdminModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from '../auth/auth-guard.service';\r\nimport { HomeComponent } from '../home/home.component';\r\nimport { PageNotFoundComponent } from '../page-not-found/page-not-found.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  redirectTo: '/home',\r\n  pathMatch: 'full'\r\n}, {\r\n  path: 'home',\r\n  component: HomeComponent\r\n}, {\r\n  path: 'auth',\r\n  loadChildren: () => import('../auth/auth.module').then(mod => mod.AuthModule)\r\n}, {\r\n  path: 'admin',\r\n  loadChildren: () => import('../admin/admin.module').then(mod => mod.AdminModule),\r\n  canLoad: [AuthGuard]\r\n}, {\r\n  path: 'blogs',\r\n  loadChildren: () => import('../blog/blog.module').then(mod => mod.BlogModule)\r\n}, {\r\n  path: 'method',\r\n  loadChildren: () => import('../blog/blog.module').then(mod => mod.BlogModule)\r\n}, {\r\n  path: 'tech',\r\n  loadChildren: () => import('../blog/blog.module').then(mod => mod.BlogModule)\r\n}, {\r\n  path: 'things',\r\n  loadChildren: () => import('../blog/blog.module').then(mod => mod.BlogModule)\r\n}, {\r\n  path: 'cfgs',\r\n  loadChildren: () => import('../cfg/cfg.module').then(mod => mod.CfgModule),\r\n  canLoad: [AuthGuard]\r\n}, {\r\n  path: 'intelligenceAudio',\r\n  loadChildren: () => import('../intelligence-audio/intelligence-audio.module').then(mod => mod.IntelligenceAudioModule)\r\n}, {\r\n  path: 'about',\r\n  loadChildren: () => import('../about/about.module').then(mod => mod.AboutModule)\r\n}, {\r\n  path: 'comments',\r\n  loadChildren: () => import('../comments/comments.module').then(mod => mod.CommentsModule)\r\n}, {\r\n  path: 'feedback',\r\n  loadChildren: () => import('../feedback/feedback.module').then(mod => mod.FeedbackModule),\r\n  canLoad: [AuthGuard]\r\n}, {\r\n  path: '**',\r\n  component: PageNotFoundComponent\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {\r\n    initialNavigation: 'enabled'\r\n})],\r\n  exports: [RouterModule],\r\n  providers: [AuthGuard],\r\n  declarations: []\r\n})\r\n\r\n\r\nexport class AppRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule, BrowserTransferStateModule } from '@angular/platform-browser';\r\n\r\nimport { AppModule } from './app.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\n\r\n@NgModule({\r\n  imports: [\r\n    AppModule,\r\n    BrowserModule.withServerTransition({ appId: 'innovation-road' }),\r\n    BrowserTransferStateModule,\r\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppBrowserModule { }","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from './auth/auth.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  private userSubscription: Subscription;\r\n  public user: any;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  public ngOnInit() {\r\n\r\n    // init this.user on startup\r\n    this.authService.me().subscribe(data => {\r\n      this.user = data.user;\r\n    });\r\n\r\n    // update this.user after login/register/logout\r\n    this.userSubscription = this.authService.$userSource.subscribe((user) => {\r\n      this.user = user;\r\n    });\r\n  }\r\n\r\n  logout(): void {\r\n    this.authService.signOut();\r\n    this.navigate('');\r\n  }\r\n\r\n  navigate(link): void {\r\n    this.router.navigate([link]);\r\n  }\r\n\r\n  ngOnDestroy() { \r\n    if (this.userSubscription) {\r\n      this.userSubscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","<app-header [user]=\"user\"></app-header>\r\n<div class=\"wrapper-app\">\r\n  <router-outlet></router-outlet>\r\n</div>","import { BrowserModule, BrowserTransferStateModule, Title } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule, PLATFORM_ID, APP_ID, Inject } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\n\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { AuthModule } from './auth/auth.module';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AdminModule } from './admin/admin.module';\r\nimport { AuthHeaderInterceptor } from './interceptors/header.interceptor';\r\nimport { CatchErrorInterceptor } from './interceptors/http-error.interceptor';\r\n\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AppRoutingModule } from './app-routing/app-routing.module';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    HomeComponent,\r\n    PageNotFoundComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    RouterModule,\r\n    SharedModule,\r\n    AuthModule,\r\n    AdminModule,\r\n    AppRoutingModule,\r\n    MDBBootstrapModule.forRoot(),\r\n    // ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\r\n  ],\r\n  providers: [\r\n    Title,\r\n    {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: AuthHeaderInterceptor,\r\n    multi: true,\r\n  }, {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: CatchErrorInterceptor,\r\n    multi: true,\r\n  }],\r\n  entryComponents: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private platformId: Object,\r\n    @Inject(APP_ID) private appId: string) {\r\n    const platform = isPlatformBrowser(platformId) ?\r\n      'in the browser' : 'on the server';\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, CanLoad } from '@angular/router';\r\nimport { TokenStorage } from './token.storage';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate, CanLoad {\r\n\r\n  storage: TokenStorage;\r\n  constructor(public router: Router) {\r\n    this.storage = new TokenStorage();\r\n  }\r\n\r\n  canActivate() {\r\n    const user = (<any>window).user || JSON.parse(this.storage.getStorage('user'));\r\n    if (user) return true;\r\n\r\n    // not logged in so redirect to login page with the return url\r\n    this.router.navigate(['/auth/login']);\r\n    return false;\r\n  }\r\n\r\n  canLoad() {\r\n    return this.canActivate();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport {LoginComponent} from './login/login.component';\r\nimport {RegisterComponent} from './register/register.component';\r\n\r\nconst routes: Routes = [{\r\n  path: 'auth',\r\n  children: [{\r\n    path: '',\r\n    redirectTo: '/auth/login',\r\n    pathMatch: 'full'\r\n  }, {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  }, {\r\n    path: 'register',\r\n    component: RegisterComponent\r\n  }]\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AuthRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { AuthService } from './auth.service';\r\nimport { TokenStorage } from './token.storage';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    AuthRoutingModule,\r\n    SharedModule,\r\n    MDBBootstrapModule.forRoot()\r\n  ],\r\n  declarations: [\r\n    LoginComponent,\r\n    RegisterComponent\r\n  ],\r\n  providers: [\r\n    AuthService,\r\n    TokenStorage\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport { TokenStorage } from './token.storage';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n  constructor(\r\n    private http: HttpClient, private token: TokenStorage) {\r\n  }\r\n\r\n  public $userSource = new Subject<any>();\r\n\r\n  login(email: string, password: string): Observable<any> {\r\n    return Observable.create(observer => {\r\n      this.http.post(`/api/auth/login`, {\r\n        email,\r\n        password\r\n      }).subscribe((data: any) => {\r\n        observer.next({ user: data.user });\r\n        this.setUser(data.user);\r\n        this.token.saveToken(data.token);\r\n        observer.complete();\r\n      })\r\n    });\r\n  }\r\n\r\n  register(fullname: string, email: string, password: string, repeatPassword: string): Observable<any> {\r\n    return Observable.create(observer => {\r\n      this.http.post(`/api/auth/register`, {\r\n        fullname,\r\n        email,\r\n        password,\r\n        repeatPassword\r\n      }).subscribe((data: any) => {\r\n        observer.next({ user: data.user });\r\n        this.setUser(data.user);\r\n        this.token.saveToken(data.token);\r\n        observer.complete();\r\n      })\r\n    });\r\n  }\r\n\r\n  setUser(user): void {\r\n    if (user) user.isAdmin = (user.roles.indexOf('admin') > -1);\r\n    this.$userSource.next(user);\r\n    (<any>window).user = user;\r\n  }\r\n\r\n  getUser(): Observable<any> {\r\n    return this.$userSource.asObservable();\r\n  }\r\n\r\n  me(): Observable<any> {\r\n    return Observable.create(observer => {\r\n      const tokenVal = this.token.getToken();\r\n      if (!tokenVal) return observer.complete();\r\n      this.http.get(`/api/auth/me`).subscribe((data: any) => {\r\n        observer.next({ user: data.user });\r\n        this.setUser(data.user);\r\n        observer.complete();\r\n      })\r\n    });\r\n  }\r\n\r\n  signOut(): void {\r\n    this.token.signOut();\r\n    this.setUser(null);\r\n    delete (<any>window).user;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AuthService } from '../auth.service';\r\nimport { TokenStorage } from '../token.storage';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['../auth.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  email: string;\r\n  password: string;\r\n  storage: TokenStorage\r\n\r\n  ngOnInit() {\r\n    this.storage = new TokenStorage();\r\n  }\r\n\r\n  login(): void {\r\n    let that = this;\r\n    this.authService.login(this.email, this.password)\r\n      .subscribe(data => {\r\n        that.storage.saveStorage('user', JSON.stringify(data.user));\r\n        this.router.navigate(['']);\r\n      })\r\n  }\r\n\r\n}\r\n","<mat-card class=\"example-card p-0\">\r\n  <mat-card-header class=\"info-color white-text text-center py-4\">\r\n    <mat-card-title>\r\n      <h4>\r\n        <strong>Sign in</strong>\r\n      </h4>\r\n    </mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content class=\"px-lg-5 pt-0 py-4\">\r\n    <form class=\"text-center pt-4\" style=\"color: #757575;\">\r\n      <mat-form-field class=\"d-block\">\r\n        <input matInput placeholder=\"Email\" [(ngModel)]=\"email\" name=\"email\" required>\r\n      </mat-form-field>\r\n      <mat-form-field class=\"d-block\">\r\n        <input matInput placeholder=\"Password\" [(ngModel)]=\"password\" type=\"password\" name=\"password\" required>\r\n      </mat-form-field>\r\n      <div class=\"d-flex justify-content-around mt-4\">\r\n        <div>\r\n          <!-- Remember me -->\r\n          <mat-checkbox>Remember me</mat-checkbox>\r\n        </div>\r\n        <div>\r\n          <!-- Forgot password -->\r\n          <a href=\"\">Forgot password?</a>\r\n        </div>\r\n      </div>\r\n      <!-- Sign in button -->\r\n      <button mat-button mat-raised-button color=\"primary\" class=\"w-100 my-4 waves-effect z-depth-0\" type=\"button\"\r\n        (click)=\"login()\">Sign in</button>\r\n      <!-- Register -->\r\n      <p>Not a member?\r\n        <a [routerLink]=\"['/auth/register']\">Register</a>\r\n      </p>\r\n      <!-- Social login -->\r\n      <p>or sign in with:</p>\r\n      <a type=\"button\" mdbBtn floating=\"true\" color=\"fb\" size=\"sm\" style=\"font-size: 2rem\" class=\"color-cyan-50\">\r\n        <mdb-icon fab icon=\"facebook\"></mdb-icon>\r\n      </a>\r\n      <a type=\"button\" mdbBtn floating=\"true\" color=\"tw\" size=\"sm\" style=\"font-size: 2rem\">\r\n        <mdb-icon fab icon=\"twitter\"></mdb-icon>\r\n      </a>\r\n      <a type=\"button\" mdbBtn floating=\"true\" color=\"li\" size=\"sm\" style=\"font-size: 2rem\">\r\n        <mdb-icon fab icon=\"linkedin\"></mdb-icon>\r\n      </a>\r\n      <a type=\"button\" mdbBtn floating=\"true\" color=\"git\" size=\"sm\" style=\"font-size: 2rem\">\r\n        <mdb-icon fab icon=\"github\"></mdb-icon>\r\n      </a>\r\n    </form>\r\n  </mat-card-content>\r\n</mat-card>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl, Validators, ValidationErrors } from '@angular/forms';\r\n\r\n\r\nimport {AuthService} from '../auth.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['../auth.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  passwordsMatchValidator(control: FormControl): ValidationErrors {\r\n    let password = control.root.get('password');\r\n    return password && control.value !== password.value ? {\r\n      passwordMatch: true\r\n    }: null;\r\n  }\r\n\r\n  userForm = new FormGroup({\r\n    fullname: new FormControl('', [Validators.required]),\r\n    email: new FormControl('', [Validators.required, Validators.email]),\r\n    password: new FormControl('', [Validators.required]),\r\n    repeatPassword: new FormControl('', [Validators.required, this.passwordsMatchValidator])\r\n  })\r\n\r\n  get fullname(): any { return this.userForm.get('fullname'); }\r\n  get email(): any { return this.userForm.get('email'); }\r\n  get password(): any { return this.userForm.get('password'); }\r\n  get repeatPassword(): any { return this.userForm.get('repeatPassword'); }\r\n\r\n  register() {\r\n\r\n    if(!this.userForm.valid) return;\r\n\r\n    let {\r\n      fullname,\r\n      email,\r\n      password,\r\n      repeatPassword\r\n    } = this.userForm.getRawValue();\r\n\r\n    this.authService.register(fullname, email, password, repeatPassword)\r\n    .subscribe(data => {\r\n      this.router.navigate(['']);\r\n    })\r\n  }\r\n\r\n}\r\n","<mat-card class=\"example-card p-0\">\r\n  <mat-card-header class=\"info-color white-text text-center py-4\">\r\n    <mat-card-title>\r\n      <h4>\r\n        <strong>Register</strong>\r\n      </h4>\r\n    </mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content class=\"px-lg-5 pt-0 py-2\">\r\n    <form class=\"text-center pt-4\" style=\"color: #757575;\" [formGroup]=\"userForm\">\r\n      <mat-form-field class=\"d-block\">\r\n        <input matInput placeholder=\"Fullname\" formControlName=\"fullname\" name=\"fullname\" required>\r\n      </mat-form-field>\r\n      <mat-form-field class=\"d-block\">\r\n        <input matInput placeholder=\"Email\" formControlName=\"email\" name=\"email\" required>\r\n      </mat-form-field>\r\n      <mat-form-field class=\"d-block\">\r\n        <input matInput placeholder=\"Password\" formControlName=\"password\" type=\"password\" name=\"password\" required>\r\n      </mat-form-field>\r\n      <mat-form-field class=\"d-block\">\r\n        <input matInput placeholder=\"Reapet Password\" formControlName=\"repeatPassword\" type=\"password\"\r\n          name=\"repeatPassword\" required>\r\n        <mat-error *ngIf=\"repeatPassword.invalid && repeatPassword.errors.passwordMatch\">Password mismatch\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </form>\r\n  </mat-card-content>\r\n  <mat-card-actions class=\"px-lg-5 pb-4\">\r\n    <button mat-button mat-raised-button color=\"primary\" class=\"w-100 my-4 waves-effect z-depth-0\" type=\"button\"\r\n      (click)=\"register()\" [disabled]='!userForm.valid'>Register</button>\r\n    <p>Allrady have an account ? <a [routerLink]=\"['/auth/login']\">login</a> here</p>\r\n  </mat-card-actions>\r\n</mat-card>","import { Injectable } from '@angular/core';\r\n\r\n\r\nconst TOKEN_KEY = 'AuthToken';\r\n\r\n@Injectable()\r\nexport class TokenStorage {\r\n\r\n  constructor() { }\r\n\r\n  signOut() {\r\n    this.validLocalStorage().removeItem(TOKEN_KEY);\r\n    this.validLocalStorage().clear();\r\n  }\r\n\r\n  public saveToken(token: string) {\r\n    if (!token) return;\r\n    this.validLocalStorage().removeItem(TOKEN_KEY);\r\n    this.validLocalStorage().setItem(TOKEN_KEY, token);\r\n  }\r\n\r\n  public getToken(): string {\r\n    return this.validLocalStorage().getItem(TOKEN_KEY);\r\n  }\r\n\r\n  public saveStorage(key: string, val: string) {\r\n    if (!key) return;\r\n    this.validLocalStorage().setItem(key, val);\r\n  }\r\n\r\n  public getStorage(key: string) {\r\n    if (!key) return;\r\n    return this.validLocalStorage().getItem(key)\r\n  }\r\n\r\n  public validLocalStorage() {\r\n    if (typeof window !== 'undefined') {\r\n      return window.localStorage\r\n    } else {\r\n      return { getItem(key) { return null }, removeItem(str) { }, clear() { }, setItem(key, val) { }, }\r\n    }\r\n  }\r\n}","import { Inject, PLATFORM_ID, APP_ID, Injectable, ErrorHandler, Injector, NgZone } from \"@angular/core\";\r\n\r\nimport { HttpErrorResponse, HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { throwError, Observable } from \"rxjs\";\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\nimport { catchError, retry } from \"rxjs/operators\";\r\nimport { environment } from '../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BaseService implements ErrorHandler {\r\n  serviceAdd: string = '/';\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private platformId: Object,\r\n    @Inject(APP_ID) private appId: string,\r\n    private httpClient: HttpClient,\r\n    private injector: Injector,\r\n    public snackBar: MatSnackBar,\r\n    private readonly zone: NgZone) {\r\n    // ssr need this full path\r\n    if (environment.production) {\r\n      this.serviceAdd = '/'\r\n    } else {\r\n      this.serviceAdd = '/'\r\n    }\r\n  }\r\n\r\n  private getRequestOptions(params?): any {\r\n    let headers = new HttpHeaders()\r\n\r\n    headers.append('X-Requested-With', 'XMLHttpRequest')\r\n    headers.append('Content-Type', 'application/json; charset=UTF-8')\r\n    headers.append('Accept', 'application/json')\r\n\r\n    let requestHeaders = { headers: headers, withCredentials: true }\r\n    if (params) {\r\n      requestHeaders = Object.assign({ params }, requestHeaders)\r\n    }\r\n\r\n    return requestHeaders\r\n  }\r\n\r\n  /**\r\n   * get请求\r\n   * @param obj\r\n   * @returns Observable\r\n   */\r\n  get(obj): Observable<any> {\r\n    let options = this.getRequestOptions(obj.params)\r\n    return this.httpClient.get<any>(`${this.serviceAdd}${obj.url}`, options).pipe(retry(3), catchError(error => this.handleError(error)));\r\n  }\r\n\r\n\r\n  /**\r\n   * post请求\r\n   * @param url\r\n   * @param body\r\n   * @returns {Promise<T>|Promise<TResult|T>|Observable<R>|Promise<R>|any}\r\n   */\r\n  post(obj): Observable<any> {\r\n    let options = this.getRequestOptions()\r\n    return this.httpClient.post<any>(`${this.serviceAdd}${obj.url}`, obj.form, options).pipe(catchError(error => this.handleError(error)));\r\n  }\r\n\r\n  /**\r\n   * delete请求\r\n   * @param url\r\n   * @param ids\r\n   * @returns {Promise<*|{}>|Promise<T>|Promise<*|{}|T>|any<T>|Promise<R>|any}\r\n   */\r\n  delete(obj): Observable<any> {\r\n    let options = this.getRequestOptions()\r\n    return this.httpClient.delete<any>(`${this.serviceAdd}${obj.url}`, options).pipe(catchError(error => this.handleError(error)));\r\n  }\r\n\r\n  /**\r\n   * put请求\r\n   * @param url\r\n   * @param body\r\n   * @returns {Promise<T>|Promise<TResult|T>|Observable<R>|Promise<R>|any}\r\n   */\r\n  put(obj): Observable<any> {\r\n    let options = this.getRequestOptions()\r\n    return this.httpClient.put<any>(`${this.serviceAdd}${obj.url}`, obj.form, options).pipe(catchError(error => this.handleError(error)));\r\n  }\r\n\r\n  postImageFile(fileToUpload) {\r\n    const formData: FormData = new FormData();\r\n    formData.append('blogBanner', fileToUpload, fileToUpload.name);\r\n    return this.httpClient.post<any>(`${this.serviceAdd}api/blogs/upload`, formData).pipe(catchError(error => this.handleError(error)));\r\n  }\r\n\r\n  public handleError(error: HttpErrorResponse) {\r\n    if (error instanceof HttpErrorResponse) {\r\n      this.zone.run(() => {\r\n        const snackBar = this.snackBar.open(error.message, 'OK', {\r\n          verticalPosition: 'bottom',\r\n          horizontalPosition: 'center',\r\n          duration: 3000,\r\n        });\r\n        snackBar.onAction().subscribe(() => {\r\n          snackBar.dismiss();\r\n        })\r\n      });\r\n    }\r\n\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.log(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${JSON.stringify(error.error)}`);\r\n    }\r\n    // return an observable with a user-facing error message\r\n    return throwError(\r\n      'Something bad happened; please try again later.');\r\n  };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Blog } from './blog';\r\nimport { BaseService } from '../base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BlogService {\r\n\r\n  constructor(private baseService: BaseService) { }\r\n\r\n  getBlogList(obj): Observable<Blog[]> {\r\n    let params = new HttpParams().set('page', obj.page)\r\n    if (obj.blogType) {\r\n      params = params.set('blogType', obj.blogType)\r\n    }\r\n    if (obj.tags) {\r\n      params = params.set('tags', obj.tags)\r\n    }\r\n    if (obj.pageNum) {\r\n      params = params.set('pageNum', obj.pageNum)\r\n    }\r\n    if (obj.blogNum) {\r\n      params = params.set('blogNum', obj.blogNum)\r\n    }\r\n    return this.baseService.get({ url: 'api/blogs', params: params })\r\n  }\r\n\r\n  getBlogCount(obj): Observable<string> {\r\n    let params = new HttpParams().set('count', 'true')\r\n    if (obj.blogType) {\r\n      params = params.set('blogType', obj.blogType)\r\n    }\r\n    if (obj.tags) {\r\n      params = params.set('tags', obj.tags)\r\n    }\r\n    if (obj.blogNum) {\r\n      params = params.set('blogNum', obj.blogNum)\r\n    }\r\n    return this.baseService.get({ url: 'api/blogs', params: params })\r\n  }\r\n\r\n  getBlogById(id: string): Observable<Blog> {\r\n    if (id) {\r\n      return this.baseService.get({ url: `api/blogs/${id}` })\r\n    } else {\r\n      return new Observable();\r\n    }\r\n  }\r\n\r\n  createBlog(form: Blog): Observable<Blog> {\r\n    return this.baseService.post({ url: 'api/blogs', form: form })\r\n  }\r\n\r\n  updateBlog(form: Blog, id: string): Observable<Blog> {\r\n    return this.baseService.put({ url: `api/blogs/${id}`, form: form })\r\n  }\r\n\r\n  deleteBlogById(id: string): Observable<Blog> {\r\n    return this.baseService.delete({ url: `api/blogs/${id}` })\r\n  }\r\n\r\n  postBannerFile(fileToUpload: File): Observable<any> {\r\n    return this.baseService.postImageFile(fileToUpload);\r\n  }\r\n\r\n  getRelativeBlogs(id: string, tag: string): Observable<Blog[]> {\r\n    let params = new HttpParams().set('id', id)\r\n    params = params.set('tag', tag)\r\n    return this.baseService.get({ url: `api/blogs/getRelativeBlogs`, params })\r\n  }\r\n\r\n  tagCloud(): Observable<any> {\r\n    return this.baseService.get({ url: `api/blogs/gettagcloud` })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Cfg } from './cfg';\r\nimport { BaseService } from '../base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CfgService {\r\n\r\n  constructor(\r\n    private service: BaseService\r\n  ) { }\r\n\r\n  getCfgList(obj): Observable<Cfg[]> {\r\n    let params = new HttpParams().set('page', obj.page || '1')\r\n    if (obj.key) {\r\n      params = params.set('key', obj.key)\r\n    }\r\n    return this.service.get({ url: 'api/cfgs', params: params })\r\n  }\r\n\r\n  getCfgCount(obj): Observable<string> {\r\n    let params = new HttpParams().set('count', 'true')\r\n    return this.service.get({ url: 'api/cfgs', params: params })\r\n  }\r\n\r\n  getCfgById(id: string): Observable<Cfg> {\r\n    if (id) {\r\n      return this.service.get({ url: `api/cfgs/${id}` })\r\n    } else {\r\n      return new Observable();\r\n    }\r\n  }\r\n\r\n  createCfg(form: Cfg): Observable<Cfg> {\r\n    return this.service.post({ url: 'api/cfgs', form: form })\r\n  }\r\n\r\n  updateCfg(form: Cfg, id: string): Observable<Cfg> {\r\n    return this.service.put({ url: `api/cfgs/${id}`, form: form })\r\n  }\r\n\r\n  deleteCfgById(id: string): Observable<Cfg> {\r\n    return this.service.delete({ url: `api/cfgs/${id}` })\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { CfgService } from '../cfg/cfg.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  coverFlag: boolean = false\r\n  coverClass: string = 'navbar navbar-expand-lg navbar-dark bg-primary scrolling-navbar intro-fixed-nav'\r\n\r\n  @Input() user: any = {};\r\n\r\n  blogTypes: any;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private cfgService: CfgService\r\n  ) {\r\n    router.events.subscribe(event => {\r\n      if (event instanceof NavigationEnd) {\r\n        if (event.url == \"/home\" || event.url == \"/\" || event.url == \"\") {\r\n          this.coverFlag = true;\r\n          this.coverClass = 'navbar fixed-top navbar-expand-lg navbar-light scrolling-navbar intro-fixed-nav'\r\n        } else {\r\n          this.coverFlag = false;\r\n          this.coverClass = 'navbar navbar-expand-lg navbar-dark bg-primary scrolling-navbar intro-fixed-nav'\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  getBlogType() {\r\n    this.cfgService.getCfgList({ page: 1, key: 'ARTICLE_TYPE' }).subscribe(res => {\r\n      this.blogTypes = JSON.parse(res[0].valu)\r\n    })\r\n  }\r\n  logout(): void {\r\n    this.authService.signOut();\r\n    this.navigate('/auth/login');\r\n  }\r\n\r\n  navigate(link): void {\r\n    this.router.navigate([link]);\r\n  }\r\n\r\n}\r\n","<header [class.h-100]=\"coverFlag\">\r\n  <mdb-navbar [SideClass]=\"coverClass\" [containerInside]=\"false\">\r\n    <mdb-navbar-brand>\r\n      <a class=\"logo navbar-brand\" href=\"#\"></a>\r\n    </mdb-navbar-brand>\r\n    <links>\r\n      <!-- Links -->\r\n      <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item mx-2\">\r\n          <a class=\"nav-link waves-light\" mdbWavesEffect [routerLink]=\"['/home']\">主页</a>\r\n        </li>\r\n        <li class=\"nav-item mx-2 d-none\">\r\n          <a class=\"nav-link waves-light\" mdbWavesEffect [routerLink]=\"['/blogs']\">博客</a>\r\n        </li>\r\n        <li class=\"nav-item mx-2\">\r\n          <a class=\"nav-link waves-light\" mdbWavesEffect\r\n            [routerLink]=\"['/method',{blogType:'innovationMethod'}]\">创新方法论</a>\r\n        </li>\r\n        <li class=\"nav-item mx-2\">\r\n          <a class=\"nav-link waves-light\" mdbWavesEffect [routerLink]=\"['/tech',{blogType:'innovationTech'}]\">创新技术</a>\r\n        </li>\r\n        <li class=\"nav-item mx-2\">\r\n          <a class=\"nav-link waves-light\" mdbWavesEffect\r\n            [routerLink]=\"['/things',{blogType:'innovationThing'}]\">创新好物</a>\r\n        </li>\r\n        <li class=\"nav-item mx-2\">\r\n          <a class=\"nav-link waves-light\" mdbWavesEffect [routerLink]=\"['/things',{blogType:'news'}]\">创新资讯</a>\r\n        </li>\r\n        <!-- Dropdown -->\r\n        <li class=\"nav-item dropdown mx-2\" dropdown *ngIf=\"user\">\r\n          <a dropdownToggle mdbWavesEffect type=\"button\" class=\"nav-link dropdown-toggle waves-light\"\r\n            mdbWavesEffect>实用小工具<span class=\"caret\"></span></a>\r\n          <div *dropdownMenu class=\"dropdown-menu dropdown dropdown-primary\" role=\"menu\">\r\n            <a class=\"dropdown-item waves-light\" mdbWavesEffect [routerLink]=\"['/intelligenceAudio']\">语音文字转换</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"nav-item mx-2\">\r\n          <a class=\"nav-link waves-light\" mdbWavesEffect [routerLink]=\"['/about']\">联系我</a>\r\n        </li>\r\n        <!-- Dropdown -->\r\n        <li class=\"nav-item dropdown mx-2\" dropdown *ngIf=\"user\">\r\n          <a dropdownToggle mdbWavesEffect type=\"button\" class=\"nav-link dropdown-toggle waves-light\"\r\n            mdbWavesEffect>配置<span class=\"caret\"></span></a>\r\n          <div *dropdownMenu class=\"dropdown-menu dropdown dropdown-primary\" role=\"menu\">\r\n            <a class=\"dropdown-item waves-light\" mdbWavesEffect [routerLink]=\"['/cfgs']\">配置</a>\r\n            <a class=\"dropdown-item waves-light\" mdbWavesEffect [routerLink]=\"['/comments']\">评论</a>\r\n            <a class=\"dropdown-item waves-light\" mdbWavesEffect [routerLink]=\"['/feedback']\">网站留言</a>\r\n            <div class=\"divider dropdown-divider\"></div>\r\n            <a class=\"dropdown-item waves-light\" mdbWavesEffect [routerLink]=\"['/blogs/index']\">文章</a>\r\n            <div class=\"divider dropdown-divider\"></div>\r\n            <a class=\"dropdown-item waves-light\" mdbWavesEffect (click)=\"logout()\">Log out</a>\r\n          </div>\r\n        </li>\r\n\r\n      </ul>\r\n    </links>\r\n  </mdb-navbar>\r\n  <!-- Main -->\r\n  <div class=\"view hide\" [class.show]='coverFlag' *ngIf='coverFlag'>\r\n    <div class=\"full-bg-img\">\r\n      <div class=\"mask rgba-black-light flex-center\">\r\n        <div class=\"container text-center white-text\">\r\n          <div class=\"white-text text-center wow fadeInUp\">\r\n            <h2>发现并通向您的创新之路</h2>\r\n            <h5>创新驿路</h5>\r\n            <br>\r\n            <p></p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- /.Main -->\r\n</header>","import { Component, OnInit } from '@angular/core';\r\nimport { BlogService } from '../blog/blog.service';\r\nimport { Blog } from '../blog/blog';\r\nimport { Title, Meta } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  recommandBlog: Blog[];\r\n\r\n  constructor(private blogService: BlogService,\r\n    private titleService: Title,\r\n    private metaService: Meta,) { }\r\n\r\n  ngOnInit() {\r\n    this.getRecommandBlog();\r\n\r\n    this.titleService.setTitle( '创新驿路' );\r\n    this.metaService.updateTag({name: 'description', content: '创新驿路-提供最新创新方法，创新事务'})\r\n    this.metaService.updateTag({name: 'keywords', content: \"创新方法,创新驿站,创新驿路,创新事件,创新,创新的事情,创新方法论\"})\r\n  }\r\n\r\n  getRecommandBlog() {\r\n    this.blogService.getBlogList({ page: 1, tags: 'recommand' }).subscribe(res => {\r\n      this.recommandBlog = res.slice(0, 3);\r\n    })\r\n  }\r\n\r\n}\r\n","<!-- Section: Blog v.2 -->\r\n<section class=\"text-center my-5 col-12\">\r\n  <!-- Section heading -->\r\n  <h2 class=\"h1-responsive font-weight-bold my-5\">驿路消息</h2>\r\n  <!-- Section description -->\r\n  <p class=\"dark-grey-text w-responsive mx-auto mb-5\">推荐给您最新最好的创新消息！</p>\r\n\r\n  <!-- Grid row -->\r\n  <div class=\"row\">\r\n    <!-- Grid column -->\r\n    <div class=\"col-lg-4 col-md-6 mb-md-0\" *ngFor=\"let blog of recommandBlog\">\r\n\r\n      <!-- Featured image -->\r\n      <div class=\"view overlay rounded z-depth-2 mb-4 waves-light\" mdbWavesEffect>\r\n        <img class=\"img-fluid\" style=\"height: 350px;\" src=\"{{blog.bannerUrl || '../../../../assets/home_bg.jpg'}}\"\r\n          alt=\"驿路推荐\">\r\n        <a [routerLink]=\"['/blogs', blog._id]\">\r\n          <div class=\"mask rgba-white-slight\"></div>\r\n        </a>\r\n      </div>\r\n      <!-- Post title -->\r\n      <h4 class=\"font-weight-bold mb-3\"><strong>{{blog.title}}</strong></h4>\r\n      <!-- Post data -->\r\n      <p>{{blog.createdAt | date:\"yyyy-MM-dd\"}}</p>\r\n      <!-- Excerpt -->\r\n      <p class=\"dark-grey-text\" style=\"height: 70px; overflow:hidden\">\r\n        {{blog.content | htmlFormat:'nohtml' | slice:0:100}}</p>\r\n      <!-- Read more button -->\r\n      <a [routerLink]=\"['/blogs', blog._id]\" mdbBtn color=\"deep-orange\" rounded=\"true\" mdbWavesEffect>查看更多</a>\r\n\r\n    </div>\r\n    <!-- Grid column -->\r\n  </div>\r\n  <!-- Grid row -->\r\n\r\n</section>\r\n<!-- Section: Blog v.2 -->\r\n\r\n<!--Section: Features v.3-->\r\n<section class=\"col-12\">\r\n\r\n  <!--Section heading-->\r\n  <h2 class=\"h1 py-5 font-weight-bold text-center\">创新系统方法论的主要特征</h2>\r\n  <!--Section description-->\r\n  <p class=\"px-5 mb-5 pb-3 lead grey-text text-center\">创新方法论是研究创新过程中有没有逻辑顺序、规则、方法以及有什么样的顺序、规则与方法为宗旨的哲学研究。</p>\r\n\r\n  <!--Grid row-->\r\n  <div class=\"row pt-2\">\r\n\r\n    <!--Grid column-->\r\n    <div class=\"col-lg-5 text-center text-lg-left\">\r\n      <img src=\"../../../../assets/screens-section.jpg\" alt=\"\" class=\"img-fluid z-depth-0\">\r\n    </div>\r\n    <!--Grid column-->\r\n\r\n    <!--Grid column-->\r\n    <div class=\"col-lg-7\">\r\n\r\n      <!--Grid row-->\r\n      <div class=\"row pb-3\">\r\n        <div class=\"col-2 col-md-1\">\r\n          <mdb-icon fa icon=\"reply\" size=\"lg\" class=\"indigo-text fa\"></mdb-icon>\r\n        </div>\r\n        <div class=\"col-10\">\r\n          <h5 class=\"font-weight-bold text-left mb-3 dark-grey-text\">创新活动是一个系统过程</h5>\r\n          <p class=\"grey-text text-left\">任何创新活动，无论是个体的、企业组织的、地区的、国家的乃至全球的创新活动，都是一个系统过程，都需要运用系统方法，才能获得好的成效</p>\r\n        </div>\r\n      </div>\r\n      <!--Grid row-->\r\n\r\n      <!--Grid row-->\r\n      <div class=\"row pb-3\">\r\n        <div class=\"col-2 col-md-1\">\r\n          <mdb-icon fa icon=\"reply\" size=\"lg\" class=\"indigo-text fa\"></mdb-icon>\r\n        </div>\r\n        <div class=\"col-10\">\r\n          <h5 class=\"font-weight-bold text-left mb-3 dark-grey-text\">创新系统是一个复杂的动态过程</h5>\r\n          <p class=\"grey-text text-left\">创新系统是开放的，演进的，是一个复杂的动态过程。创新通常是在“混沌边缘”实现的</p>\r\n        </div>\r\n      </div>\r\n      <!--Grid row-->\r\n\r\n      <!--Grid row-->\r\n      <div class=\"row pb-3\">\r\n        <div class=\"col-2 col-md-1\">\r\n          <mdb-icon fa icon=\"reply\" size=\"lg\" class=\"indigo-text fa\"></mdb-icon>\r\n        </div>\r\n        <div class=\"col-10\">\r\n          <h5 class=\"font-weight-bold text-left mb-3 dark-grey-text\">创新是一个互动学习的过程</h5>\r\n          <p class=\"grey-text text-left\">各创新要素之间的联系是创新系统的核心，正是要素联系孕育了创新。创新需要在不同技能、不同思想和不同价值观的人们良好的融合与交流中，才能激发出有创意的解决方案。\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <!--Grid row-->\r\n\r\n    </div>\r\n    <!--Grid column-->\r\n\r\n  </div>\r\n  <!--Grid row-->\r\n\r\n</section>\r\n<!--Section: Features v.3-->\r\n\r\n<!--Section: Features v.4-->\r\n<section class=\"col-12\">\r\n  <!--Section heading-->\r\n  <h2 class=\"h1 py-5 font-weight-bold text-center\">我们的聚焦是什么?</h2>\r\n  <!--Section description-->\r\n  <p class=\"px-5 mb-5 pb-3 lead grey-text text-center\">创新驿路专注于最新的科技前沿，发现身边的美.</p>\r\n\r\n  <!--Grid row-->\r\n  <div class=\"row\">\r\n\r\n    <!--Grid column-->\r\n    <div class=\"col-md-4\">\r\n\r\n      <!--Grid row-->\r\n      <div class=\"row mb-2\">\r\n        <div class=\"col-2\">\r\n          <mdb-icon fas icon=\"home\" size=\"2x\" class=\"deep-purple-text\"></mdb-icon>\r\n        </div>\r\n        <div class=\"col-10 text-left\">\r\n          <h5 class=\"font-weight-bold\">智慧家居</h5>\r\n          <p class=\"grey-text\">家庭自动化系统能够控制灯光、窗户、温湿度、影音设备以及家电等，他也可能同时包含家庭保全，例如出入控制或者是警报器。</p>\r\n        </div>\r\n      </div>\r\n      <!--Grid row-->\r\n\r\n      <!--Grid row-->\r\n      <div class=\"row mb-2\">\r\n        <div class=\"col-2\">\r\n          <mdb-icon fab icon=\"internet-explorer\" size=\"2x\" class=\"deep-purple-text\"></mdb-icon>\r\n        </div>\r\n        <div class=\"col-10 text-left\">\r\n          <h5 class=\"font-weight-bold\">物联网</h5>\r\n          <p class=\"grey-text\">物联网，又称IoT技术，是互联网、传统电信网等的信息承载体，让所有能行使独立功能的普通物体实现互联互通的网络。</p>\r\n        </div>\r\n      </div>\r\n      <!--Grid row-->\r\n\r\n      <!--Grid row-->\r\n      <div class=\"row mb-2\">\r\n        <div class=\"col-2\">\r\n          <mdb-icon fas icon=\"glass-martini\" size=\"2x\" class=\"deep-purple-text\"></mdb-icon>\r\n        </div>\r\n        <div class=\"col-10 text-left\">\r\n          <h5 class=\"font-weight-bold\">其他</h5>\r\n          <p class=\"grey-text\">待添加</p>\r\n        </div>\r\n      </div>\r\n      <!--Grid row-->\r\n\r\n    </div>\r\n    <!--Grid column-->\r\n\r\n    <!--Grid column-->\r\n    <div class=\"col-md-4 mb-2 center-on-small-only flex-center\">\r\n      <img src=\"../../../../assets/iphone-portfolio1.png\" alt=\"\" class=\"z-depth-0\">\r\n    </div>\r\n    <!--Grid column-->\r\n\r\n    <!--Grid column-->\r\n    <div class=\"col-md-4\">\r\n\r\n      <!--Grid row-->\r\n      <div class=\"row mb-2\">\r\n        <div class=\"col-2\">\r\n          <mdb-icon fas icon=\"car\" size=\"2x\" class=\"deep-purple-text\"></mdb-icon>\r\n        </div>\r\n        <div class=\"col-10 text-left\">\r\n          <h5 class=\"font-weight-bold\">车联网</h5>\r\n          <p class=\"grey-text\">互联汽车也称为联网汽车，是可以连接到互联网的车辆，车辆可以和其他车内或是车外的设备分享网络资源,也可以让驾驶更加便利</p>\r\n        </div>\r\n      </div>\r\n      <!--Grid row-->\r\n\r\n      <!--Grid row-->\r\n      <div class=\"row mb-2\">\r\n        <div class=\"col-2\">\r\n          <mdb-icon fas icon=\"bolt\" size=\"2x\" class=\"deep-purple-text\"></mdb-icon>\r\n        </div>\r\n        <div class=\"col-10 text-left\">\r\n          <h5 class=\"font-weight-bold\">其他</h5>\r\n          <p class=\"grey-text\">待添加</p>\r\n        </div>\r\n      </div>\r\n      <!--Grid row-->\r\n\r\n      <!--Grid row-->\r\n      <div class=\"row mb-2\">\r\n        <div class=\"col-2\">\r\n          <mdb-icon fas icon=\"magic\" size=\"2x\" class=\"deep-purple-text\"></mdb-icon>\r\n        </div>\r\n        <div class=\"col-10 text-left\">\r\n          <h5 class=\"font-weight-bold\">其他</h5>\r\n          <p class=\"grey-text\">待添加</p>\r\n        </div>\r\n      </div>\r\n      <!--Grid row-->\r\n\r\n    </div>\r\n    <!--Grid column-->\r\n\r\n  </div>\r\n  <!--Grid row-->\r\n\r\n</section>\r\n<!--/Section: Features v.4-->","import {HttpEvent, HttpInterceptor, HttpHandler, HttpRequest} from '@angular/common/http';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {TokenStorage} from '../auth/token.storage';\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class AuthHeaderInterceptor implements HttpInterceptor {\r\n\tintercept(req : HttpRequest <any>, next : HttpHandler) : Observable <HttpEvent<any>> {\r\n\t\t\t// Clone the request to add the new header\r\n      const token = new TokenStorage();\r\n      const tokenVal = token.getToken();\r\n\t\t\tconst clonedRequest = req.clone({\r\n\t\t\theaders: req\r\n\t\t\t\t.headers\r\n\t\t\t\t.set('Authorization', tokenVal ? `Bearer ${ tokenVal}` : '')\r\n\t\t});\r\n\r\n\t\t// Pass the cloned request instead of the original request to the next handle\r\n\t\treturn next.handle(clonedRequest);\r\n\t}\r\n}","import { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Injectable } from \"@angular/core\";\r\n\r\nimport 'rxjs/add/operator/do';\r\n\r\n@Injectable()\r\nexport class CatchErrorInterceptor implements HttpInterceptor {\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    return next\r\n      .handle(request)\r\n      .do\r\n      ((event: HttpEvent<any>) => { }, (err: any) => {\r\n        if (err instanceof HttpErrorResponse) {\r\n          let text = (err.error && err.error.message) ? err.error.message : err.statusText;\r\n          if (typeof window !== 'undefined') {\r\n            (<any>window).globalEvents.emit('open error dialog', text);\r\n          }\r\n        }\r\n      });\r\n\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.scss']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"middle-box text-center animated fadeInDown my-5\">\r\n  <h1>404</h1>\r\n  <h3> 页面未能够找到！</h3>\r\n  <div>\r\n    抱歉，页面好像去火星啦！\r\n  </div>\r\n  <button mdbBtn color=\"light\" class=\"my-4 mx-4\" type=\"button\" routerLink=\"/\">返回首页</button>\r\n</div>","import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\n@Pipe({\r\n  name: \"htmlFormat\"\r\n})\r\nexport class HtmlFormatPipe implements PipeTransform {\r\n  constructor(private sanitizer: DomSanitizer) {\r\n  }\r\n  transform(style, type: string) {\r\n    if (type == 'nohtml') {\r\n      return style.replace(/<[^>]+>/g, \"\")\r\n    } else {\r\n      return this.sanitizer.bypassSecurityTrustHtml(style);\r\n    }\r\n  }\r\n}","import { Component, OnInit, Output, EventEmitter, Input, SimpleChange } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-pagination',\r\n  templateUrl: './pagination.component.html',\r\n  styleUrls: ['./pagination.component.scss']\r\n})\r\nexport class PaginationComponent implements OnInit {\r\n\r\n  private _total: number;\r\n  public _num: number;\r\n  public pageList = [];\r\n  public url = ''\r\n\r\n  @Input()\r\n  set total(total: number) {\r\n    this._total = total || 0\r\n  }\r\n\r\n  get total() {\r\n    return this._total;\r\n  }\r\n\r\n  @Input()\r\n  size: number = 10;\r\n  @Input()\r\n  icur: number = 1;\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.url = this.router.url;\r\n  }\r\n\r\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\r\n    this._num = Math.ceil(this.total / this.size)\r\n    this.url = this.router.url;\r\n    this.getPageList()\r\n  }\r\n\r\n  getPgUrl(index) {\r\n    let url_array = this.url.split(';')\r\n    let url_root = url_array[0];\r\n    let params = {}\r\n    if (url_array.length > 1) {\r\n      let url_params = url_array[1].split('&');\r\n      url_params.forEach(element => {\r\n        let tmp = element.split('=');\r\n        params[tmp[0]] = tmp[1];\r\n      });\r\n    }\r\n    params['page'] = index\r\n    return [url_root, params]\r\n  }\r\n\r\n  getPageList() {\r\n    //console.log(this.pageParams)\r\n    if (this._num <= 5 || this.icur <= 3) {\r\n      if (this._num > 5) {\r\n        this.pageList = [1, 2, 3, 4, 5]\r\n      } else {\r\n        this.pageList = []\r\n        for (let i = 0; i < this._num; i++) {\r\n          this.pageList.push(i + 1)\r\n        }\r\n      }\r\n    } else if ((this._num - this.icur) < 3) {\r\n      this.pageList = [this._num - 4, this._num - 3, this._num - 2, this._num - 1, this._num]\r\n    } else {\r\n      this.pageList = [this.icur - 2, this.icur - 1, this.icur, this.icur + 1, this.icur + 2]\r\n    }\r\n  }\r\n\r\n  pageListToAbove() {\r\n    if (this.pageList[0] - 5 < 1) {\r\n      this.pageList = []\r\n      if (this._num > 5) {\r\n        this.pageList = [1, 2, 3, 4, 5]\r\n      } else {\r\n        this.pageList = []\r\n        for (let i = 0; i < this._num; i++) {\r\n          this.pageList.push(i + 1)\r\n        }\r\n      }\r\n    } else {\r\n      this.pageList = this.pageList.map((value, index) => {\r\n        return value -= 5\r\n      })\r\n    }\r\n  }\r\n\r\n  pageListToNext() {\r\n    if (this.pageList[4] + 5 > this._num) {\r\n      this.pageList = []\r\n      if (this._num > 5) {\r\n        this.pageList = [this._num - 4, this._num - 3, this._num - 2, this._num - 1, this._num]\r\n      } else {\r\n        this.pageList = []\r\n        for (let i = this._num; i > 0; i--) {\r\n          this.pageList.push(i)\r\n        }\r\n        this.pageList.reverse();\r\n      }\r\n    } else {\r\n      this.pageList = this.pageList.map((value, index) => {\r\n        return value += 5\r\n      })\r\n    }\r\n  }\r\n}\r\n","<nav aria-label=\"Page navigation example\">\r\n  <ul class=\"pagination pg-blue justify-content-center\" *ngIf=\"_num>1\">\r\n    <li class=\"page-item {{ (icur == 1 ) ? 'disabled' : '' }}\"><a class=\"page-link\" mdbWavesEffect\r\n        [routerLink]=\"getPgUrl(1)\">第一页</a></li>\r\n    <li class=\"page-item {{ (pageList[0] == 1 ) ? 'disabled' : '' }}\">\r\n      <a class=\"page-link\" aria-label=\"Previous\" mdbWavesEffect (click)=\"pageListToAbove()\">\r\n        <span aria-hidden=\"true\">&laquo;</span>\r\n        <span class=\"sr-only\">前一页</span>\r\n      </a>\r\n    </li>\r\n    <li class=\"page-item {{ page == icur ? 'active' : ''}}\" *ngFor=\"let page of pageList\">\r\n      <a class=\"page-link\" mdbWavesEffect [routerLink]=\"getPgUrl(page)\">{{ page }}</a>\r\n    </li>\r\n    <li class=\"page-item\">\r\n      <a class=\"page-link {{ (pageList[pageList.length-1] == _num ) ? 'disabled' : '' }}\" aria-label=\"Next\"\r\n        mdbWavesEffect (click)=\"pageListToNext()\">\r\n        <span aria-hidden=\"true\">&raquo;</span>\r\n        <span class=\"sr-only\">下一页</span>\r\n      </a>\r\n    </li>\r\n    <li class=\"page-item {{ (icur == _num ) ? 'disabled' : '' }}\"><a class=\"page-link\" mdbWavesEffect\r\n        [routerLink]=\"getPgUrl(_num)\">最后</a></li>\r\n  </ul>\r\n</nav>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\r\nimport { PaginationComponent } from './pagination/pagination.component';\r\nimport { HtmlFormatPipe } from '../pipe/html-format.pipe';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AdsenseModule } from 'ng2-adsense';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatToolbarModule,\r\n    MatMenuModule,\r\n    MatTabsModule,\r\n    MatDividerModule,\r\n    MatCardModule,\r\n    MatListModule,\r\n    MatExpansionModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatSidenavModule,\r\n    MatTreeModule,\r\n    MatProgressBarModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    FlexLayoutModule,\r\n    MatCheckboxModule,\r\n    RouterModule,\r\n    MDBBootstrapModule.forRoot(),\r\n    AdsenseModule.forRoot({\r\n      adClient: 'ca-pub-4838746167999749',\r\n      adSlot: 9560442788,\r\n      layout: \"in-article\",\r\n      adFormat: \"fluid\",\r\n    }),\r\n  ],\r\n  exports: [\r\n    MatToolbarModule,\r\n    MatMenuModule,\r\n    MatTabsModule,\r\n    MatDividerModule,\r\n    MatCardModule,\r\n    MatListModule,\r\n    MatExpansionModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatSidenavModule,\r\n    MatTreeModule,\r\n    MatProgressBarModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    FlexLayoutModule,\r\n    MatCheckboxModule,\r\n    MDBBootstrapModule,\r\n    PaginationComponent,\r\n    HtmlFormatPipe,\r\n    AdsenseModule\r\n  ],\r\n  declarations: [HtmlFormatPipe, PaginationComponent]\r\n})\r\nexport class SharedModule { }\r\n","export const environment = {\r\n  production: false,\r\n  application:\r\n  {\r\n    name: 'innovation-road',\r\n    angular: 'Angular 9.0.6',\r\n    fontawesome: 'Font Awesome 5.12.1',\r\n  }\r\n};","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppBrowserModule } from './app/app.browser.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  platformBrowserDynamic().bootstrapModule(AppBrowserModule)\r\n    .catch(err => console.log(err));\r\n});"]}